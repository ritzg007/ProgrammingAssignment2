q()
install.packages("slidify")
install.packages("devtools")
install.packages("SLC")
install.packages("abc")
load(abc)
library(abc)
library(devtools)
library(slidify)
library(SLC)
library(SLC)
install.packages("ggplot2")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
x<-1
x
print(x);
a<-## ji
jdii
a<- ##hhha;
kwk]
a<-3 #nothing prinj
a
abc<-10.0:11.2;
abc
1/0
30/a
30/r
30/0
a<-matrix(1,2,3,4,5,6)
a<-matrix(1,2,3,4,5,6)
a<-matrix(1,2,3,4,5,6);
a<-matrix(1:6);
a
a<-matrix(1:6,nrow=3);
a
c<-vector()
class(c)
attributes(c)
c<-vector("character",length=3)
c
a<-c(1,2,3,NA,5)
is.na(a[4])
is.na(a[1])
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
parent.frame()
for(i in 1:4)
{}
q()
for(i in 1:4){}
for(i in 1:4)
{
x<-list(i)
}
x
for(i in 1:4)
{
x<-c(i)
}
x
b<-1:4
b
as.list(b)
v<-c(b)
v
as.list(w=1:4)
as.list(a=v)
b<-1:3
list(f=1:6)
list(u=b)
for (i in 1:4
vector <- c(vector, i)
for (i in 1:4)
vector <- c(vector, i)
vector
for (i in 1:4)
list <- list(list, i)
list
for (i in 1:4)
a <- list(a, i)
a<list()
a<-list()
for (i in 1:4)
+     a <- list(a, i)
a<-list()
for (i in 1:4)
a <- list(a, i)
a<-list()
for (i in 1:4)
a <- append(a, i)
a
a<-c()
for (i in 1:4)
a <- append(a, i)
a
as.list(nam=a)
d<-list(k=a)
d
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
a<-mtcars
a
b<-subset(a,cyl==4)
b
mean(b[, 5])
d<-mean(b[, 5])
d
d<-mean(b[, 4])
d
e<-subset(a,cyl==8)
e
d
e<-subset(a,cyl==8)
f<-mean(e[, 4])
f
f-d
debug(ls)
ls
deb
mtcars
a<-mtcars
b<-subset(a,cyl==4)
b
c<-mean(b[, 4])
c
d<-subset(a,cyl==8)
e<-mean(d[, 4])
d
e
e-c
iris
ri
setwd("C:/Users/RITANKAR/Desktop/datascience_coursera/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
a <- matrix(1:4, 2, 2)
b <- makeCacheMatrix(a)
source("cachematrix.R")
b <- makeCacheMatrix(a)
a <- matrix(1:4, 2, 2)
b <- makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
